% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_egf.R
\name{egf_make_tmb_data}
\alias{egf_make_tmb_data}
\title{Construct data objects for C++ template}
\usage{
egf_make_tmb_data(model, frame, frame_parameters, priors, control, fit, init)
}
\arguments{
\item{model}{An \code{"\link{egf_model}"} object specifying a top level nonlinear model
to be estimated.}

\item{frame, frame_parameters}{Model frames obtained from the list output of \code{egf_make_frames}.}

\item{priors}{A \link{list} of \link{formula}e of the form \code{parameter ~ f(...)}
specifying priors on top level nonlinear model parameters.
\code{\link{deparse}(parameter)} must be an element
of \code{\link{get_names_top}(model, link = TRUE)}, and
\code{f(...)} must be a \link{call} to a \link[=egf_prior]{prior function}
with arguments specifying suitable hyperparameters.
Calls are evaluated in the corresponding formula environments.}

\item{control}{An \code{"\link{egf_control}"} object specifying control parameters.}

\item{fit}{A \link{logical} flag. If \code{TRUE}, then \code{egf} returns early
with a \link{list} of optimization inputs.}

\item{init}{A \link{numeric} vector to be used as the full parameter vector for
the first likelihood evaluation. The default (\code{\link{NULL}}) is
to accept the internally generated default. Use \code{fit = FALSE}
to retrieve this default and other optimization inputs (in particular
\code{Y_init}; see Value), which can often be used to construct a more
informative starting point.}
}
\value{
[Below,
\code{N = \link{nlevels}(frame$window)}
is the number of fitting windows,
\code{n = N + \link{sum}(!\link{is.na}(frame$window))}
is the total number of time points associated with a fitting window, and
\code{p = \link{length}(frame_parameters)}
is the number of top level nonlinear model parameters.]

A \link{list} inheriting from \link{class} \code{"tmb_data"},
with elements:
\item{time}{
  A \link[=double]{numeric} vector of length \code{n} giving
  times since the left endpoint of the current fitting window.
}
\item{time_seg_len}{
  An \link{integer} vector of length \code{N} specifying the
  length of each fitting window as a number of time points.
}
\item{x}{
  A \link[=double]{numeric} vector of length \code{n-N} giving incidence
  in each fitting window. \code{x[i]} in window \code{k} is the number
  of cases observed from \code{time[k+i-1]} to \code{time[k+i]}.
}
\item{day1}{
  If \code{model$day_of_week > 0}, then an \link{integer} vector
  of length \code{N} indicating the first day of week in each
  fitting window, with value \code{i} in \code{0:6} mapping to
  the day of week \code{i} days after the reference day specified
  by \code{model$day_of_week}. Otherwise, an integer vector of
  the same length filled with \code{-1}.
}
\item{flags}{
  A \link{list} with \link{integer} elements, used as flags to
  specify the model being estimated and to indicate what blocks
  of template code should be run.
}
\item{Y}{
  The \link[=model.offset]{offset} component of the response matrix
  in dense format, with \code{N} rows and \code{p} columns.
}
\item{indices}{
  A \link{list} with \link{integer} elements and \link{names} of the
  form \code{"index_link_parameter"} (e.g., \code{"index_log_r"}),
  giving the column 0-index of top level nonlinear model parameters
  (e.g., \code{log(r)}) in the response matrix. Value \code{-1}
  is used for parameters not belonging to the model being estimated.
}
\item{hyperparameters}{
  A \link{list} of \code{p} \link{numeric} vectors listing parameters
  of the prior distribution (if any) assigned to top level nonlinear
  model parameters.
}
\item{X}{
  The fixed effects design matrix in \link[Matrix:sparseMatrix]{sparse}
  or dense format, depending on \code{control$sparse_X}, with \code{N} rows.
}
\item{Xs, Xd}{
  If \code{control$sparse_X = TRUE}, then \code{Xs = X} and \code{Xd}
  is an empty dense matrix. Otherwise, \code{Xd = X} and \code{Xs} is
  an empty sparse matrix.
}
\item{Z}{
  The random effects design matrix in \link[Matrix:sparseMatrix]{sparse}
  format, with \code{N} rows. If there are no random effects, then \code{Z}
  is an empty sparse matrix.
}
\item{X_info, Z_info}{
  \link[=data.frame]{Data frame}s with \code{\link{ncol}(X)}
  and \code{\link{ncol}(Z)} rows, respectively, constructed
  by \code{\link{egf_make_XZ_info}}. Row \code{j} describes the
  coefficient associated with column \code{j} of \code{X}
  or \code{Z}. \code{Z_info} has additional \link{factor}s
  \code{cor} and \code{vec} \link{split}ting coefficients
  by relation to a common covariance matrix and random vector,
  respectively.
}
\item{beta_index, b_index}{
  \link[=integer]{Integer} vectors of length \code{\link{ncol}(X)}
  and \code{\link{ncol}(Z)}, respectively, with values in \code{0:(p-1)}.
  These split the columns of \code{X} and \code{Z} by relation to
  a common top level nonlinear model parameter.
}
\item{beta_index_tab, b_index_tab}{
  \link[=integer]{Integer} vectors of length \code{p} counting the
  columns of \code{X} and \code{Z}, respectively, that relate to
  a common top level nonlinear model parameter.
}
\item{block_rows, block_cols}{
  \link[=integer]{Integer} vectors together giving the dimensions
  of each block of random effects.
}
}
\description{
Gathers in a \link{list} data objects to be passed to
the package's C++ template via \pkg{TMB}'s \code{DATA_*} macros.
}
\seealso{
\code{\link[TMB]{MakeADFun}}
}
\keyword{internal}
