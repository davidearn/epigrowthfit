% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/egf_utils.R
\name{check_formula}
\alias{check_formula}
\alias{check_fixed}
\alias{check_random}
\title{Validate model formulae}
\usage{
check_formula(formula)

check_fixed(fixed, curve, distr, excess)

check_random(random, curve, distr, excess)
}
\arguments{
\item{formula}{A formula of the form \code{y ~ x} specifying an incidence time series
or multiple incidence time series in long format. \code{x} and \code{y} must
be vectors of dates (see \code{date_format}) and integers, respectively.}

\item{fixed}{Named lists of formulae of the form \code{~rhs}, together specifying
a generalized linear mixed effects model (the fixed and random
components) for each parameter of the \emph{incidence} model indicated
by \code{curve}, \code{distr}, and \code{excess}. A list of valid names can be
obtained with \code{get_par_names(curve, distr, excess, link = TRUE)}.
Alternatively, formulae (rather than lists of formulae) to be
recycled for all parameters. Syntax is \code{\link[lme4:lmer]{lme4}}-like,
but here all variables must be factors. \code{fixed} formulae are
restricted to one term and so must have the form \code{~f1:...:fn}
or \code{~1} (the default for each missing list element). \code{random}
formulae must give sums of terms of the form \code{(1 | f1:...:fn)},
\code{(1 | f1/.../fn)}, or \code{(1 | f1 * ... * fn)}. Use \code{NULL} (the
default for each missing list element) instead of a formula to
indicate absence of random effects.}

\item{curve}{A character string specifying a cumulative incidence model.}

\item{distr}{A character string specifying an observation model.}

\item{excess}{A logical scalar. If \code{TRUE}, then a constant baseline mortality
rate will be estimated. Set to \code{TRUE} if what is observed
(\code{y} if \code{formula = y ~ x}) is multiple causes mortality
rather than disease mortality or incidence.}

\item{random}{Named lists of formulae of the form \code{~rhs}, together specifying
a generalized linear mixed effects model (the fixed and random
components) for each parameter of the \emph{incidence} model indicated
by \code{curve}, \code{distr}, and \code{excess}. A list of valid names can be
obtained with \code{get_par_names(curve, distr, excess, link = TRUE)}.
Alternatively, formulae (rather than lists of formulae) to be
recycled for all parameters. Syntax is \code{\link[lme4:lmer]{lme4}}-like,
but here all variables must be factors. \code{fixed} formulae are
restricted to one term and so must have the form \code{~f1:...:fn}
or \code{~1} (the default for each missing list element). \code{random}
formulae must give sums of terms of the form \code{(1 | f1:...:fn)},
\code{(1 | f1/.../fn)}, or \code{(1 | f1 * ... * fn)}. Use \code{NULL} (the
default for each missing list element) instead of a formula to
indicate absence of random effects.}
}
\value{
\code{check_formula()} returns \code{formula} as is.

\code{check_fixed()} and \code{check_random()} return lists of \code{p} formulae
with names \code{get_par_names(curve, distr, excess, link = TRUE)}.
If \code{fixed} and \code{random} are already subsets of such a list, then
those subsets are preserved, and the set difference is made up of
\code{~1} and \code{NULL}, respectively. If \code{fixed} and \code{random} are formulae
(rather than lists of formulae) or if \code{random} is \code{NULL}, then they
are recycled to length \code{p}.
}
\description{
Check that formulae passed to \code{\link[=egf]{egf()}} are specified correctly
by deparsing and comparing against an accepted pattern.
}
\details{
In R 4.0.3, formulae are deparsed with one or zero spaces on each
side of the tilde operator \code{~} (one if there is a left-hand side,
zero if not), zero spaces around \verb{( ) : /}, and one space around
\verb{+ - * |}. \code{check_formula()} and friends unsafely assume that this
behavior is maintained across R versions, so unexpected breakage
is possible.

FIXME: Refactor using \code{\link[stats:terms]{stats::terms()}} instead of deparse-regex
to avoid breakage. Ideally, allow for arithmetic, nonsyntactic
variable names, and spurious parentheses, which are currently not
tolerated (see Examples).
}
\examples{
curve  <- "exponential"
distr  <- "pois"
excess <- FALSE
get_par_names(curve, distr, excess, link = TRUE)
## [1] "log_r" "log_c0"

cfm <- epigrowthfit:::check_formula
cfx <- function(fixed) {
  epigrowthfit:::check_fixed(fixed, curve, distr, excess)
}
crd <- function(random) {
  epigrowthfit:::check_random(random, curve, distr, excess)
}

## Time series
cfm(y ~ x)

## Fixed effects
cfx(list(log_r = ~z, log_c0 = ~z))
cfx(list(log_r = ~z0, log_c0 = ~z1:z2))
cfx(~z) # same as first line
cfx(list(r = ~z)) # `c0` defaults to `~1` (global mean)

## Random effects
crd(list(log_r = ~(1|z), log_c0 = ~(1|z)))
crd(list(log_r = ~(1|z0), log_c0 = ~(1|z1:z2)))
crd(~(1|z)) # same as first line
crd(list(r = ~(1|z))) # `c0` defaults to NULL (no RE)
crd(list(r = ~(1|z0), c0 = ~(1|z1/z2))) # RE component allowed >1 term,
                                        # `z1/z2` expands to 2 terms

## Not run
\dontrun{
cfm(I(y1 + y2) ~ x)  # error: arithmetic
cfm("0y" ~ x)        # error: nonsyntactic variable name
cfm((y) ~ x)         # error: spurious parentheses
cfx(list(r = ~z, c = ~z))       # error: misnamed parameter
cfx(list(r = ~z0, c0 = ~z1*z2)) # error: FE component restricted to 1 term,
                                #        `z1*z2` expands to 3 terms
cfx(NULL)                       # error: for null FE model use `~1`
crd(~1)                         # error: RE terms need >1 group
}

}
\keyword{internal}
