% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/egf_init.R
\name{egf_init}
\alias{egf_init}
\title{Define fitting windows and initial parameter estimates}
\usage{
egf_init(
  time,
  cases,
  model = "exponential",
  distribution = "poisson",
  theta0 = NULL,
  r_if_leq0 = 0.1/365,
  min_wlen = switch(model, exponential = 2, logistic = 3, richards = 4) + (distribution
    == "nbinom"),
  peak = min_wlen - 1 + which.max(cases[min_wlen:length(cases)]),
  first = NULL,
  first_level = NULL,
  skip_zero = TRUE
)
}
\arguments{
\item{time}{A numeric vector listing increasing time points in years.}

\item{cases}{A numeric vector with length \code{length(time)}.
\code{cases[i]} is the number of cases observed at time \code{time[i]}.
Here, "cases" can mean (reported) infections or (reported)
deaths. Missing values are not tolerated.}

\item{model}{One of \code{"exponential"}, \code{"logistic"}, and \code{"richards"},
indicating a phenomenological model.}

\item{distribution}{One of \code{"poisson"} and \code{"nbinom"},
indicating an observation model.}

\item{theta0}{A list with numeric scalar elements specifying
initial estimates of parameters:

\describe{
\item{\code{r}}{Initial growth rate expressed per day.}
\item{\code{x0}}{Expectation of the number of cases observed
at time \code{time[1]}. Used only if \code{model = "exponential"}.
}
\item{\code{K}}{Expectation of the number of cases observed over the full
course of the epidemic (i.e., the expected final epidemic size).
Used only if \code{model \%in\% c("logistic", "richards")}.
}
\item{\code{thalf}}{Expectation of the time in years at which
the epidemic attains half of its final size. Used only if
\code{model \%in\% c("logistic", "richards")}
}
\item{\code{p}}{Shape parameter. Used only if \code{model = "richards"}.}
\item{\code{nbdisp}}{Dispersion parameter.
Used only if \code{distribution = "nbinom"}.
}
}

\code{theta0} can be \code{NULL} or a list specifying only a subset of
the relevant parameters. In this case, the absent parameters
are set internally. See Value.}

\item{r_if_leq0}{A numeric scalar. Assigned to \code{theta0$r}
if \code{!"r" \%in\% names(theta0)} and the default value of
\code{theta0$r}, which is computed internally, is negative
or zero. See Value.}

\item{min_wlen}{An integer scalar. The minimum number
of observations in the fitting window. Must be at
least the number of parameters being fit (the default).}

\item{peak}{An integer in \code{seq_along(cases)} indexing
the peak in \code{cases}. The index of the last observation
in the fitting window will be \code{peak} or \code{peak+1}.
The default is like \code{which.max(cases)} but careful
to prevent \code{peak < min_wlen}. See Details.}

\item{first}{An integer in \code{seq_along(cases)} indexing
the first observation in the fitting window, or \code{NULL}.
Non-\code{NULL} values may not be respected, depending on
other arguments. See Details.}

\item{first_level}{A numeric scalar or \code{NULL}. Can be
used to define \code{first} if \code{first = NULL}. See Details.}

\item{skip_zero}{A logical scalar. If \code{TRUE}, then an
attempt is made when defining \code{first} to ensure that
\code{cases[first] > 0}. See Details.}
}
\value{
An "egf_init" object. A list with elements:

\describe{
\item{\code{first}}{An integer indexing the start of the fitting window,
so that the first observation is \code{cases[first]}. May not match
the argument of the same name. See Details.
}
\item{\code{last}}{An integer indexing the end of the fitting window,
so that the last observation is \code{cases[last]}. Equal to \code{peak}
if \code{model = "exponential"} and \code{max(length(cases), peak + 1)}
otherwise.
}
\item{\code{theta0}}{A list like the argument of the same name,
but complete with values for all relevant parameters.
Parameters values specified in the argument are retained.
Those absent are assigned their default value:\preformatted{\\begin\{describe\}\{
  \\item\{`r`, `x0`\}\{`beta1 / 365` and `exp(beta0)`, respectively,
    where `beta0` and `beta1` are the intercept and slope of a
    linear least squares fit to `log(cases + 0.1) ~ time` within
    the first half of the fitting window. Here, "intercept" means
    the value of the fit at the start of the fitting window. If
    the slope is negative or zero, then `r` is assigned the value
    of argument `r_if_leq0`.
  \}
  \\item\{`K`\}\{`sum(cases)`\}
  \\item\{`thalf`\}\{`time[peak]`\}
  \\item\{`p`\}\{1.0001\}
  \\item\{`nbdisp`\}\{1\}
\}
}

}
\item{arg_list}{A list of all arguments, making the \code{egf_init()}
output reproducible with \code{do.call(egf_init, arg_list)}.
}
\item{call}{The call to \code{egf_init()}, making the \code{egf_init()}
output reproducible with \code{eval(call)}.
}
}
}
\description{
Given an incidence or mortality time series, constructs an
"egf_init" object specifying a fitting window and initial
parameter estimates. Pains are taken to define a window
and estimates that are reasonable in the absence of any
user input.
}
\details{
\subsection{Fitting window selection}{

The fitting window ends at index \code{last = peak},
where \code{last = peak} if \code{model = "exponential"}
and \code{last = max(length(cases), peak + 1)} otherwise.

The length \code{wlen = last-first+1} of the fitting window
is constrained to be at least \code{min_wlen}. This implies
two constraints on the arguments: \code{peak >= min_wlen} if
\code{model = "exponential"} and \code{peak >= min_wlen-1} otherwise,
and \code{first <= peak-min_wlen+1}. An error will be thrown
if arguments \code{peak} and \code{first} (unless \code{first = NULL})
do not conform to these constraints.

If \code{first = NULL} and \code{first_level = NULL}, then \code{first}
is set internally to the greatest index \code{i} in \code{1:(peak-min_wlen+1)}
for which \code{cases[i] = min(cases[1:(peak-min_wlen+1)])}.
If \code{first = NULL} and \code{first_level != NULL}, then \code{first}
is set internally to one plus the greatest index \code{i} in
\code{1:(peak-min_wlen)} for which \code{cases[i] < first_level * max(cases)}.
If no such index exists, then \code{first} is set to 1.
Finally, if \code{first != NULL}, then the supplied value is
respected (unless \code{skip_zeros = TRUE}) and \code{first_level}
is ignored.

If \code{skip_zeros = TRUE} and \code{first} (as defined above) is
such that \code{cases[first] = 0} and \code{first < peak-min_wlen+1},
then \code{first} is increased by one until \code{cases[first] > 0}
or \code{first = peak-min_wlen+1}.
}
}
\examples{
data(canadacovid)
ontario <- na.omit(subset(canadacovid, province == "ON"))
x <- egf_init(
  time = ontario$time,
  cases = ontario$new_confirmations,
  model = "richards",
  distribution = "nbinom"
)
print(x)
plot(x)

}
\references{
\insertRef{Ma+14}{epigrowthfit}

\insertRef{Earn+20}{epigrowthfit}
}
\seealso{
\link[=egf_init-methods]{methods for class "egf_init"}
}
