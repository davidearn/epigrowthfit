% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{check}
\alias{check}
\title{Validate an atomic vector}
\usage{
check(
  x,
  ...,
  what = NULL,
  not = NULL,
  len = NULL,
  opt = NULL,
  val = NULL,
  rel = c(">=", "<="),
  yes = NULL,
  no = NULL,
  action = c("stop", "warning", "nothing")
)
}
\arguments{
\item{x}{An atomic vector.}

\item{...}{Zero or more objects coercible to character, which are
pasted together without separator to generate an error
or warning message (depending on \code{action}).}

\item{what}{A character vector listing object classes. Check fails
if \code{x} does not inherit from one of these classes.}

\item{not}{A character vector listing object classes. Check fails
if \code{x} inherits from one of these classes.}

\item{len}{A numeric vector. If \code{length(len) = 1}, then check fails
if \code{length(x) != len}. If \code{length(len) > 1}, then check
fails if \code{length(x) < len[1]} or \code{length(x) > len[2]}.}

\item{opt}{An atomic vector indicating acceptable values for \code{x[i]}.
Check fails if \code{!all(x \%in\% opt)}.}

\item{val}{A numeric vector indicating endpoints for an interval
of acceptable values for \code{x[i]}, assuming that \code{x} is
numeric. Whether the endpoints are included in this
interval is determined by \code{rel}.
If \code{length(val) = 1}, then check fails if
\code{!all(x == val, na.rm = TRUE)}.
If \code{length(val) > 1} and (for example) \code{rel = c(">=", "<=")},
then check fails if
\code{!all(x >= val[1] & x <= val[2], na.rm = TRUE)}.}

\item{rel}{A character vector of length 2 such that
\code{rel[1] \%in\% c(">", ">=")} and \code{rel[2] \%in\% c("<", "<=")}.}

\item{yes}{A function or list of functions of one argument returning
either \code{TRUE} or \code{FALSE}. Check fails if any return \code{FALSE}
\code{FALSE} when applied to \code{x}.}

\item{no}{A function or list of functions of one argument returning
either \code{TRUE} or \code{FALSE}. Check fails if any return \code{TRUE}
when applied to \code{x}.}

\item{action}{One of \code{"stop"}, \code{"warning"}, and \code{"nothing"}, indicating
how check failure should be handled.}
}
\value{
\code{TRUE} if check passes and \code{FALSE} otherwise.
}
\description{
Checks the class, length, and value of an atomic vector and
optionally throws an error if desired conditions are not met.
Simplifies the task of validating atomic vector arguments of
functions.
}
\details{
Checks are performed in the order of \code{names(formals(check))}.
If \code{what} fails then \code{not} will not be checked. If \code{not} fails,
then \code{len} won't be checked (and so on).

Ironically, no checks on the input are performed, so use with
care (e.g., if setting \code{val}, then make sure that \code{x} is numeric
or that \code{what} contains \code{"numeric"}).

Integer vectors are accepted as numeric vectors when \code{what}
contains \code{"numeric"}. Hence \code{check(1:6, what = "numeric")}
returns \code{TRUE}.
}
\keyword{internal}
