% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/egf.R
\name{egf_simulate}
\alias{egf_simulate}
\title{Simulate incidence time series for tests}
\usage{
egf_simulate(
  N,
  model = egf_model(),
  mu,
  Sigma = NULL,
  tol = 1e-06,
  tmax = 100,
  cstart = 10,
  origin = .Date(0L)
)
}
\arguments{
\item{N}{A positive integer indicating a number of time series.}

\item{model}{An \code{"\link{egf_model}"} object.}

\item{mu}{A \link{numeric} vector listing mean nonlinear and dispersion model
parameter values (link scale). It is assumed that elements are ordered
as in \code{\link{get_par_names}(model, link = TRUE)}.}

\item{Sigma}{A symmetric positive definite \link{numeric} \link{matrix}.
This is the covariance matrix corresponding to \code{mu}.
The default (\code{\link{NULL}}) is equivalent to a zero matrix.}

\item{tol}{A non-negative number indicating a tolerance for lack of positive
definiteness of \code{Sigma} (see \code{\link[MASS]{mvrnorm}}).}

\item{tmax}{A positive number. Time series generated from a model of cumulative
incidence without an inflection point
(\code{model$curve \link{\%in\%} c("exponential", "subexponential")})
run from 0 to \code{\link{floor}(tmax)} days.}

\item{cstart}{A non-negative number. Left endpoints of suggested fitting windows
are those times when simulated cumulative incidence first exceeds
\code{cstart}.}

\item{origin}{A \link{Date} specifying a reference time.}
}
\value{
A \link{list} inheriting from \link{class} \code{"egf_simulate"},
with elements:
\item{model, mu, Sigma, origin}{
  Copies of the so-named arguments.
}
\item{Y}{
  A \link[=double]{numeric} \link{matrix} with \code{N} rows and
  \code{length(mu)} columns listing the nonlinear and dispersion
  model parameter values underlying each time series.
  If \code{Sigma} is \code{\link{NULL}}, then the rows of \code{Y}
  are all \code{mu}.
  If \code{Sigma} is non-\code{\link{NULL}}, then \code{Y} is the
  result of \code{\link[MASS]{mvrnorm}(N, mu, Sigma, tol)}.
}
\item{data}{
  A \link[=data.frame]{data frame} with variables \code{ts}, \code{time},
  and \code{x} storing \code{N} simulated time series in long format.
  \code{ts} is a \link{factor} with \code{N} \link{levels} grouping
  the rows by time series. \code{time} is a \link[=double]{numeric}
  vector listing time points as numbers of days since \emph{the end of}
  Date \code{origin}. \code{x} is an \link{integer} vector such that,
  within time series, \code{x[i]} is the number of cases observed between
  \code{time[i-1]} and \code{time[i]}.
}
\item{endpoints}{
  A \link[=data.frame]{data frame} with \code{N} rows and variables
  \code{ts}, \code{start}, and \code{end} suggesting a fitting window
  for each simulated time series.
}
\item{formula_par}{
  A \link{formula} specifying the generative model, to be passed to
  \code{\link{egf}} when estimating this model from \code{data}.
  If \code{N = 1}, then \code{formula_par = ~1}.
  If \code{N > 1}, then \code{formula_par = ~ts} or \code{~(1 | ts)}
  (the former if \code{Sigma} is \code{\link{NULL}}, the latter otherwise).
}
\item{actual}{
  A \link[=double]{numeric} vector giving the full parameter vector
  corresponding to the generative model. When estimating this model
  from \code{data}, \code{\link{egf}} output should be compared against
  \code{actual}. More precisely, if \code{m} is the \code{"\link{egf}"}
  object, then \code{m$best} estimates \code{actual}.
}
\item{call}{
  The \link{call} to \code{egf_simulate}, allowing for updates
  to the \code{"egf_simulate"} object via \code{\link{update}}.
}
}
\description{
Simulates daily incidence time series according
to an \code{"\link{egf_model}"} object.
Variation in nonlinear and dispersion model parameters
between time series follows a random intercept model \code{~(1 | ts)}.
}
\examples{
model <- egf_model(curve = "logistic", family = "nbinom")

# get_par_names(model, link = TRUE)
r <- log(2) / 20
tinfl <- 160
K <- 25000
nbdisp <- 50

mu <- log(c(r, tinfl, K, nbdisp))
Sigma <- diag(rep_len(0.25, length(mu)))

object <- egf_simulate(
  N = 6L,
  model = model,
  mu = mu,
  Sigma = Sigma
)

}
