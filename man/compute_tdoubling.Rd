% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_tdoubling.R
\name{compute_tdoubling}
\alias{compute_tdoubling}
\alias{compute_tdoubling.default}
\alias{compute_tdoubling.egf}
\title{Compute doubling time}
\usage{
compute_tdoubling(r, ...)

\method{compute_tdoubling}{default}(r, per = NULL, ...)

\method{compute_tdoubling}{egf}(r, ...)
}
\arguments{
\item{r}{A non-negative numeric vector listing exponential growth rates.
Alternatively, an \code{"egf"} object returned by \code{\link[=egf]{egf()}}.}

\item{...}{(For \code{inherits(r, "egf")} only.)
Optional arguments passed to \code{\link[=fitted.egf]{fitted.egf()}},
presumably \code{subset} and \code{append}.}

\item{per}{A positive integer indicating that \code{r} is a rate per \code{per} days,
in which case the result is printed with units. Use the default
(\code{NULL}) if \code{r} is unitless.}
}
\value{
The default method returns \code{log(2) / r} with \code{"tdoubling"}
prepending to its class. \code{per} is retained as an attribute
for use by \code{print.tdoubling()}.

The method for class \code{"egf"} constructs the data frame
\code{fitted(r, par = "log_r", link = FALSE, ...)}, replaces
variable \code{value} with \code{compute_tdoubling(value, per = 1L)},
and returns the result. Note that \code{value} always has units
of reciprocal days, corresponding to \code{per = 1L}.
}
\description{
Calculates \code{log(2) / r} for non-negative \code{r}. This is the
doubling time corresponding to exponential growth rate \code{r}.
}
\details{
The method for class \code{"egf"} will issue an error if \code{r$curve}
is not an element of \code{c("exponential", "logistic", "richards")}.
}
\examples{
r <- 10^(-2:0)
td <- compute_tdoubling(r)
all.equal(td, log(2) / r)

## `per` attribute affects printing
for (i in c(1, 2, 7, 8, 365, 366)) {
  attr(td, "per") <- i
  print(td)
}

}
