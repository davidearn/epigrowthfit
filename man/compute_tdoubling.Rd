% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_tdoubling.R
\name{compute_tdoubling}
\alias{compute_tdoubling}
\alias{compute_tdoubling.default}
\alias{compute_tdoubling.egf}
\title{Compute doubling time}
\usage{
compute_tdoubling(r, ...)

\method{compute_tdoubling}{default}(r, per = NULL, ...)

\method{compute_tdoubling}{egf}(r, subset, ...)
}
\arguments{
\item{r}{A numeric vector with non-negative elements listing exponential
growth rates. Alternatively, an \code{"egf"} object returned by \code{\link[=egf]{egf()}}.}

\item{...}{Arguments passed to methods.}

\item{per}{A positive integer indicating that \code{r} is a rate per \code{per} days,
in which case the result is printed with units. Use the default
(\code{NULL}) if \code{r} is unitless.}

\item{subset}{A named list passed to \code{\link[=fitted.egf]{fitted.egf()}}.}
}
\value{
The default method returns \code{log(2) / r}.

The method for class \code{"egf"} constructs the
data frame \code{d = fitted(r, subset, link = TRUE)},
appends \code{tdoubling = log(2) / exp(d$log_r)},
and returns the result omitting extraneous variables.
(Here, \code{exp(d$log_r)} always has units of reciprocal
days, corresponding to \code{per = 1L}.)

Unless \code{per = NULL}, the result has \code{"tdoubling"}
prepended to its class and \code{per} stored as an
attribute for use by \code{print.tdoubling()}.
}
\description{
Calculates \code{log(2) / r} for non-negative \code{r}. This is the
doubling time corresponding to exponential growth rate \code{r}.
}
\details{
The method for class \code{"egf"} will issue an error if \code{r$curve}
is not an element of \code{c("exponential", "logistic", "richards")}.
}
\examples{
r <- 10^(-2:0)
td <- compute_tdoubling(r)
all.equal(td, log(2) / r)

## Printing depends on `per` attribute
class(td) <- c("tdoubling", class(td))
for (i in c(1, 2, 7, 8, 365, 366)) {
  attr(td, "per") <- i
  print(td)
}

}
