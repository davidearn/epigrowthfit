% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitted.R
\name{fitted.egf}
\alias{fitted.egf}
\alias{fitted.egf_no_fit}
\title{Extract fitted values}
\usage{
\method{fitted}{egf}(
  object,
  top = egf_get_names_top(object, link = TRUE),
  link = TRUE,
  se = FALSE,
  subset = NULL,
  append = NULL,
  .subset = NULL,
  .append = NULL,
  ...
)

\method{fitted}{egf_no_fit}(
  object,
  top = egf_get_names_top(object, link = TRUE),
  link = TRUE,
  se = FALSE,
  subset = NULL,
  append = NULL,
  .subset = NULL,
  .append = NULL,
  ...
)
}
\arguments{
\item{object}{An \code{"\link{egf}"} or \code{"\link[=egf]{egf_no_fit}"} object.}

\item{top}{A subset of \code{\link{egf_get_names_top}(object, link = TRUE)}
naming top level nonlinear model parameters for which fitted
values should be retrieved.}

\item{link}{A logical flag.
If \code{FALSE}, then fitted values are inverse link-transformed.}

\item{se}{A logical flag. If \code{se = TRUE} and \code{link = TRUE},
then approximate delta method standard errors on fitted values
are reported.
Standard errors are required for subsequent use
of \code{\link{confint.egf_fitted}}.
Setting \code{se = TRUE} and \code{link = FALSE} is an error,
as standard errors are not available for inverse link-transformed
fitted values.
Setting \code{se = TRUE} when \code{object} inherits from class
\code{"egf_no_fit"} is likewise an error.}

\item{subset}{An expression to be evaluated in
\code{\link[=model.frame.egf]{model.frame}(object, "combined")}.
It must evaluate to a valid index vector for the rows of
the data frame and, in turn, fitting windows.
Fitted values are retrieved only for indexed windows.
The default (\code{NULL}) is to consider all windows.}

\item{append}{An expression indicating variables in
\code{\link[=model.frame.egf]{model.frame}(object, "combined")}
to be included with the result.
The default (\code{NULL}) is to append nothing.}

\item{.subset, .append}{Index vectors to be used (if non-\code{NULL}) in place of
the result of evaluating \code{subset} and \code{append}.}

\item{...}{Unused optional arguments.}
}
\value{
A data frame inheriting from class \code{"egf_fitted"}, with variables:
\item{top}{
  Top level nonlinear model parameter,
  from \code{\link{egf_get_names_top}(object, link = link)}.
}
\item{ts}{
  Time series, from
  \code{levels(\link[=model.frame.egf]{model.frame}(object)$ts)}.
}
\item{window}{
  Fitting window, from
  \code{levels(\link[=model.frame.egf]{model.frame}(object)$window)}.
}
\item{estimate}{
  Fitted value of parameter \code{top} in fitting window \code{window}.
  If \code{object} inherits from class \code{"egf"},
  then this is conditioned on the estimated mixed effects model.
  If \code{object} inherits from class \code{"egf_no_fit"},
  then this is conditioned on the \emph{initial} values
  of mixed effects model parameters.
}
\item{se}{
  Approximate delta method standard error on \code{estimate}.
  Absent except for calls matching \code{fitted(link = TRUE, se = TRUE)}.
}
}
\description{
Retrieves fitted values of top level nonlinear model parameters.
The fitted value of a given parameter for a given fitting window
is obtained by adding
(i) the population fitted value computed as a linear combination
of fixed effects coefficients and
(ii) all applicable random effects, with random effects set equal
to their conditional modes.
}
\details{
See topic \code{\link{egf_eval}} for details on nonstandard evaluation
of \code{subset} and \code{append}.
}
\examples{
object <- egf_cache("egf-1.rds")
zz <- egf_cache("fitted-egf-1.rds", fitted(object, se = TRUE))
str(zz)

}
\seealso{
\code{\link{confint.egf_fitted}}

Other extractors: 
\code{\link{coef.egf}()},
\code{\link{df.residual.egf}()},
\code{\link{fixef.egf}()},
\code{\link{formula.egf}()},
\code{\link{getCall.egf}()},
\code{\link{logLik.egf}()},
\code{\link{model.frame.egf}()},
\code{\link{model.matrix.egf}()},
\code{\link{nobs.egf}()},
\code{\link{ranef.egf}()},
\code{\link{terms.egf}()},
\code{\link{vcov.egf}()}
}
\concept{extractors}
