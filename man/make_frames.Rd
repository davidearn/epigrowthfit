% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/egf_utils.R
\name{make_frames}
\alias{make_frames}
\title{Validate model formulae and construct model frames}
\usage{
make_frames(
  formula_ts,
  formula_glmm,
  data,
  window,
  curve,
  excess,
  distr,
  weekday,
  na_action,
  par_init
)
}
\arguments{
\item{formula_ts}{A formula of the form \code{y ~ x} or \code{y ~ x | ts} specifying
one or more incidence time series in long format. \code{x} and \code{y}
must evaluate to Date and numeric vectors, respectively. \code{ts}
must evaluate to a factor splitting the data by time series.
\code{y ~ x} is equivalent to \code{y ~ x | ts} with \code{ts} evaluating
to \code{rep(factor(1), length(x))}. In each time series, \code{y[i]}
should give the number of cases observed from \code{23:59:59} on
date \code{x[i-1]} to \code{23:59:59} on date \code{x[i]} (hence time series
may have unequal spacing).}

\item{formula_glmm}{A named list of formulae of the form \code{~terms}, specifying
mixed effects models (with \code{\link[lme4:lmer]{lme4}}-like syntax)
for nonlinear model parameters.
In this case, \code{names(formula_glmm)} must be a subset of
\code{get_par_names(curve, distr, excess, weekday, link = TRUE)},
and \code{~1} is used as a default for parameters not assigned a
formula. Alternatively, a formula of the form \code{~terms} to be
recycled for all nonlinear model parameters. Mixed effects
variables must match the length of time series variables and
be constant in each fitting window.}

\item{data}{A data frame, list, or environment. \code{egf()} looks here for
variables used in \code{formula_ts} and \code{formula_glmm}, before
looking in formula environments.}

\item{window}{A factor of length \code{nrow(data)} such that \code{split(data, window)}
splits \code{data} by fitting window, with \code{is.na(window)} indexing
rows of \code{data} not belonging to a fitting window.}

\item{curve}{A character string specifying a cumulative incidence model.}

\item{excess}{A logical scalar. If \code{TRUE}, then a constant baseline mortality
rate is estimated. Set to \code{TRUE} if what is observed (\code{y} if
\code{formula = y ~ x | ts}) is multiple causes mortality rather than
disease mortality or disease incidence.}

\item{distr}{A character string specifying an observation model.}

\item{weekday}{A logical scalar. If \code{TRUE}, then weekday effects are estimated,
though this currently requires daily observation of incidence in
all fitting windows.}

\item{na_action}{A character string indicating how \code{NA} in incidence
(\code{y} if \code{formula_ts = y ~ x | ts}) are handled.
\code{NA} in other \code{formula_ts} variables are an error.
\code{NA} in \code{formula_glmm} variables \emph{inside fitting windows}
are an error.}

\item{par_init}{A full parameter vector for the first likelihood evaluation.
Set to \code{NULL} to accept the internally generated default. If
the default causes errors, then use \code{debug = TRUE} to retrieve
its value, which will have the correct length, and modify as
necessary.}
}
\value{
A list with elements:
\item{\code{frame_ts}}{
The model frame for time series formula \code{formula_ts}
(see Details), storing \code{terms(formula_ts)} as an attribute.
}
\item{\code{frame_glmm}}{
A list containing the model frame for each mixed effects formula
in \code{formula_glmm} (after completion). \code{frame_glmm[[i]]} stores
\code{terms(formula_glmm[[i]])} as an attribute.
}
}
\description{
Constructs model frames to be used by \code{\link[=egf]{egf()}},
while performing myriad checks on the input.
}
\details{
\code{frame_ts} is not constructed by \code{\link[stats:model.frame]{stats::model.frame()}}. Without
loss of generality, if \code{formula_ts = y ~ x | ts}, then \code{frame_ts}
has variables \code{x} (Date), \code{y} (numeric), \code{ts} (factor),
and \code{.window} (factor). It is obtained (roughly) by evaluating the
expressions for \code{x}, \code{y}, and \code{ts} in \code{data} (with \code{data} enclosed
by \code{environment(formula_ts)}), joining the resulting vectors and
\code{window} in a data frame, discarding rows belonging to time series
without fitting windows, and ordering the remaining rows according
to \code{order(ts)}.

\code{frame_glmm} model frames are constructed by \code{\link[stats:model.frame]{stats::model.frame()}}.
They each have \code{nlevels(window) < nrow(frame_ts)} rows, because all
nonlinear model parameters (and by consequence all \code{formula_glmm}
variables) are required to be constant within fitting windows.
}
