% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/egf.R
\name{egf}
\alias{egf}
\title{\loadmathjax
Fit models of epidemic growth}
\usage{
egf(init, method = "nlminb", ...)
}
\arguments{
\item{init}{An "egf_init" object, specifying epidemic data,
a fitting window, and initial parameter estimates.
See \code{\link[=egf_init]{egf_init()}}.}

\item{method}{One of \code{"nlminb"}, \code{"nlm"}, \code{"Nelder-Mead"},
\code{"BFGS"}, \code{"L-BFGS-S"}, and \code{"CG"}, indicating the method
used to minimize the negative log likelihood function.}

\item{...}{Additional arguments to \code{\link[stats:nlminb]{nlminb()}},
\code{\link[stats:nlm]{nlm()}}, or \code{\link[stats:optim]{optim()}}.}
}
\value{
An "egf" object. A list with elements:

\describe{
\item{\code{theta_hat}}{A named numeric vector specifying the
optimizer's estimate of the minimizer of the negative
log likelihood function.
}
\item{\code{log_theta_hat}}{Log-transformed \code{theta_hat}. Identical
to \code{log(theta_hat)} with \code{"log_"} prepended to the names.
}
\item{\code{nll}}{A numeric scalar giving the negative log likelihood
corresponding to \code{log_theta_hat}.
}
\item{\code{nll_fn}}{A closure with numeric argument \code{log_theta}
specifying a log-transformed parameter vector (default
is \code{log_theta_hat}). Returns the negative log likelihood
function evaluated at \code{x}.
}
\item{\code{nll_gr}}{A closure like \code{nll_fn}, but returning the
gradient of the negative log likelihood function evaluated
at \code{x}.
}
\item{\code{cum_inc}}{A closure with numeric arguments \code{time}
and \code{theta} (default is \code{theta_hat}), evaluating expected
cumulative incidence at \code{times} (days since \code{date[1]},
as supplied to \code{\link[=egf_init]{egf_init()}}) using parameter values \code{theta}.
}
\item{\code{int_inc}}{A closure like \code{cum_inc}, but evaluating
expected interval incidence. Returns \code{diff(cum_inc(time, theta))},
hence the length of the value is \code{length(time)-1}.
}
\item{\code{init}}{Matches argument.}
\item{\code{madf_out}}{The list output of \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}}.}
\item{\code{optim_out}}{The list output of \code{\link[stats:nlminb]{nlminb()}},
\code{\link[stats:nlm]{nlm()}}, or \code{\link[stats:optim]{optim()}},
depending on \code{method}.
}
\item{\code{call}}{The call to \code{egf()}, making the output
reproducible with \code{eval(call)}.
}
}
}
\description{
Minimizes the negative log likelihood of an epidemic growth model
using \code{\link[stats:nlminb]{nlminb()}}, \code{\link[stats:nlm]{nlm()}}, or
one of the routines provided through \code{\link[stats:optim]{optim()}}.
The negative log likelihood function is written as a C++ template.
Its gradient with respect to parameters is computed by automatic
differentiation using package \pkg{TMB}.
}
\examples{
data(canadacovid)
ontario <- na.omit(subset(canadacovid, province == "ON"))
init <- egf_init(
  date = ontario$date,
  cases = ontario$new_confirmations[-1],
  curve = "richards",
  distr = "nbinom"
)
x <- egf(init)
plot(x)
plot(x, inc = "cumulative")
coef(x)
coef(x, log = TRUE)

}
\references{
\insertRef{Ma+14}{epigrowthfit}
}
