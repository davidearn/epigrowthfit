% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/egf.R
\name{egf}
\alias{egf}
\title{Fit models of epidemic growth}
\usage{
egf(
  formula_ts,
  formula_par,
  data_ts = parent.frame(),
  data_par = parent.frame(),
  endpoints,
  origin = .Date(0),
  curve = c("logistic", "richards", "exponential", "subexponential", "gompertz"),
  excess = FALSE,
  distr = c("nbinom", "pois"),
  weekday = FALSE,
  method = c("nlminb", "nlm", "Nelder-Mead", "BFGS"),
  na_action = c("fail", "fail"),
  sparse_X = FALSE,
  debug = FALSE,
  trace = FALSE,
  init = NULL,
  append = NULL,
  ...
)
}
\arguments{
\item{formula_ts}{A formula of the form \code{x ~ time} or \code{x ~ time | ts} specifying
one or more incidence time series in long format. \code{time} must
evaluate to a numeric or Date vector. Numeric \code{time} is assumed
to measure time as a number of days since \emph{the end of} date
\code{origin}. Date \code{time} is coerced to numeric \code{julian(time, origin)}
(see Details). \code{x} must evaluate to a numeric vector. Within a
time series, \code{x[i]} should specify the number of cases observed
from \code{time[i-1]} to \code{time[i]}. Finally, \code{ts} must evaluate to
a factor such that \code{split(data.frame(time, x), ts)} returns
a list of time series. Note that \code{x ~ time} is equivalent to
\code{x ~ time | ts} with \code{ts} set equal to \code{rep(factor(1), length(x))}.}

\item{formula_par}{A list of formulae of the form \code{par ~ terms} specifying
mixed effects models (\code{\link[lme4:lmer]{lme4}}-like syntax)
for nonlinear model parameters. \code{deparse(par)} must be an
element of
\code{get_par_names(curve, distr, excess, weekday, link = TRUE)}.
\code{~1} is the default for parameters not assigned a formula.
Alternatively, \code{formula_par} may be a formula of the form
\code{~terms}. In this case, the formula is recycled for all
nonlinear model parameters. Note that "individuals" in each
model are fitting windows, hence model frames constructed
from \code{formula_par} and \code{data_par} are expected to correspond
rowwise to \code{endpoints} (see Details).}

\item{data_ts, data_par}{Data frames, lists, or environments. These are searched prior
to formula environments for variables used in \code{formula_ts} and
\code{formula_par}, respectively.}

\item{endpoints}{A data frame, list, or environment with variables \code{start}
and \code{end}, and any further variables necessary to evaluate
\code{ts} if \code{formula_ts = x ~ time | ts}. \code{start} and \code{end}
must be numeric or Date vectors listing start and end times
for all fitting windows. \code{ts} must evaluate to a factor
indicating the time series in which each window is found.
Within time series, intervals \verb{[start[i], end[i]]} must be
disjoint and contain at least two time points from \code{time}.}

\item{origin}{A Date specifying a reference time.}

\item{curve}{A character string specifying a cumulative incidence model.}

\item{excess}{A logical scalar. If \code{TRUE}, then a constant baseline mortality
rate is estimated. Set to \code{TRUE} if what is observed is multiple
causes mortality rather than disease mortality or disease incidence.}

\item{distr}{A character string specifying an observation model.}

\item{weekday}{An integer scalar. If \code{weekday > 0}, then weekday effects are
estimated as offsets relative to the indicated day
(Sunday if \code{weekday = 1}, Monday if \code{weekday = 2}, and so on).
Currently, weekday effect estimation requires \code{time} in
\code{formula_ts = x ~ time | ts} to evaluate to an integer
(in the sense of \code{all.equal(time, round(time))}) or Date vector
with 1-day spacing in all fitting windows.
Logical \code{weekday} is equivalent to \code{as.integer(weekday)}.}

\item{method}{A character string specifying an optimizer available through
\code{\link[stats:nlminb]{stats::nlminb()}}, \code{\link[stats:nlm]{stats::nlm()}}, or \code{\link[stats:optim]{stats::optim()}}.}

\item{na_action}{A character vector to be recycled to length 2.
\code{na_action[1L]} affects the handling of \code{NA}
in \code{x} if \code{formula_ts = x ~ time | ts}.
\code{"fail"} is to throw an error.
\code{"exclude"} is to ignore \code{NA} when fitting and retain \code{NA}
in predictions.
\code{"pass"} is to ignore \code{NA} when fitting and predict \code{NA}.
\code{NA} in \code{time} and \code{ts} are an error regardless of \code{na_action}.
\code{na_action[2L]} affects the handling of \code{NA}
in \code{formula_par} variables.
\code{"fail"} is to throw an error.
\code{"exclude"} and \code{"pass"} are to discard fitting windows
with incomplete data.}

\item{sparse_X}{A logical scalar. If \code{TRUE}, then the fixed effects design
matrix is constructed in sparse format.}

\item{debug}{A logical scalar used for debugging. If \code{TRUE}, then
\code{egf()} returns early with a list of optimization inputs.}

\item{trace}{An integer scalar used for debugging.
If 0, then no tracing is done.
If 1, then negative log likelihood terms are printed
when they are non-finite or exceed \code{1e12}.
If 3, then all negative log likelihood terms are printed.
Values 2 and 4 are equivalent to 1 and 3,
but with additional printing of the full response matrix.}

\item{init}{A full parameter vector for the first likelihood evaluation.
Set to \code{NULL} to accept the internally generated default.
Use \code{debug = TRUE} to retrieve this default, which may be
useful as a template.}

\item{append}{An expression indicating variables in \code{data_par} to be preserved
in the returned \code{"egf"} object for use by methods.
It is evaluated similarly to the \code{select} argument of \code{\link[=subset]{subset()}}.
The default (\code{NULL}) is to preserve all variables.
Currently, usage is supported only if \code{data_par} is a data frame.}

\item{...}{Optional arguments to the optimizer specified by \code{method}.}
}
\value{
If \code{debug = FALSE}, then a list inheriting from class \code{"egf"},
with elements:
\item{\code{endpoints}}{
A data frame with variables \code{ts}, \code{window}, \code{start}, and
\code{end} listing start and end times for all fitting windows.
(Supplied intervals are contracted internally so that
\code{start} and \code{end} are precisely the minimum and maximum
of the set of time points contained in the window.)
Rows are ordered by time series and chronologically
within time series. \code{origin} is retained as an attribute.
}
\item{\code{frame_ts}}{
The time series model frame, constructed from \code{formula_ts}
and \code{data_ts}, with variables \code{ts}, \code{window}, \code{time}, and
\code{x}. \code{ts} and \code{window} are factors that can be used to split
\code{frame_ts} by time series and by fitting window, respectively.
Rows are ordered by time series and chronologically within
time series. \code{terms(formula_ts)} and \code{origin} are retained
as attributes. \code{unclass(window)} indexes rows of \code{endpoints}.
That is, time series data for the fitting window defined by
row \code{i} of \code{endpoints} can be found in the rows of \code{frame_ts}
for which \code{window = levels(window)[i]}.
}
\item{\code{frame_par}}{
A list of mixed effects model frames, constructed from
\code{formula_par} and \code{data_par}. There is one model frame
for each nonlinear model parameter listed in
\code{get_par_names(curve, excess, distr, weekday, link = TRUE)}.
\code{frame_par[[name]]} retains \code{terms(formula_par[[name]])} as
an attribute. Model frames correspond rowwise to \code{endpoints}.
That is, mixed effects data on the fitting window defined
by row \code{i} of \code{endpoints} can be found in row \code{i} of each
model frame.
}
\item{\code{frame_append}}{
A data frame preserving the variables from \code{data_par}
indicated by \code{append}. Corresponds rowwise to \code{endpoints}.
}
\item{\code{curve}, \code{excess}, \code{distr}, \code{weekday}, \code{method}}{
Copies of the so-named arguments (after matching).
}
\item{\code{tmb_args}}{
A list of arguments to \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}}. See \code{\link[=make_tmb_args]{make_tmb_args()}}.
}
\item{\code{tmb_out}}{
The list output of \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}} (after optimization).
}
\item{\code{optim_out}}{
The list output of the optimizer specified by \code{method}.
}
\item{\code{init}}{
The full parameter vector of the first likelihood evaluation.
}
\item{\code{best}}{
The full parameter vector of the best likelihood evaluation.
}
\item{\code{nonrandom}}{
An integer vector indexing the nonrandom segment of \code{best}.
}
\item{\code{report}}{
A list containing all variables \code{REPORT()}ed and \code{ADREPORT()}ed
in the C++ template, with an additional element \code{cov} giving the
covariance matrix corresponding to \code{par[nonrandom]}.
}
\item{\code{nll}}{
A numeric scalar giving the value of the negative log
Laplace approximation of the marginal likelihood function
at \code{best[nonrandom]}.
}
\item{\code{nll_func}, \code{nll_grad}}{
Closures taking a numeric vector \code{x} as an argument and returning
the value or gradient of the negative log Laplace approximation of
the marginal likelihood function at \code{x[nonrandom]}.
}
\item{\code{call}}{
The call to \code{egf()}, allowing for updates to the \code{"egf"} object
via \code{\link[stats:update]{stats::update()}}.
}
If \code{debug = TRUE}, then a list containing only
\code{endpoints}, \code{frame_ts}, \code{frame_par}, \code{init}, \code{tmb_args}, and \code{call}.
}
\description{
Fits nonlinear mixed effects models of epidemic growth to one
or more disease incidence time series.
}
\details{
If \code{formula_ts = x ~ time | ts}, then coercion of Date \code{time} to
numeric \code{julian(time, origin)} assumes that each element \code{time[i]}
can be read as "end of date \code{time[i]}", so that observation \code{x[i]}
in a given time series is the number of cases observed from the
end of date \code{time[i-1]} to the end of date \code{time[i]}.

To avoid unexpected mismatch between \code{endpoints} and mixed effects
model frames constructed from \code{formula_par} and \code{data_par},
keep all necessary \code{endpoints} variables in \code{data_par}, and
set \code{endpoints = data_par}.
}
