% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/egf.R
\name{egf}
\alias{egf}
\title{\loadmathjax
Fit a model of epidemic growth}
\usage{
egf(init, method = "nlminb", na_action = "exclude", nbdisp_tol = 100, ...)
}
\arguments{
\item{init}{An "egf_init" object specifying epidemic data, a fitting window,
and initial parameter estimates. See \code{\link[=egf_init]{egf_init()}}.}

\item{method}{One of \code{"nlminb"}, \code{"nlm"}, \code{"Nelder-Mead"}, \code{"BFGS"},
\code{"L-BFGS-S"}, and \code{"CG"}, indicating an optimization algorithm.}

\item{na_action}{One of \code{"fail"} and \code{"exclude"}, indicating how missing values
in the fitting window are handled.}

\item{nbdisp_tol}{A positive number defining a threshold on the fitted value
of the negative binomial dispersion parameter. Used only if
\code{init$distr = "nbinom"}.}

\item{...}{Additional arguments to \code{\link[stats:nlminb]{stats::nlminb()}}, \code{\link[stats:nlm]{stats::nlm()}},
or \code{\link[stats:optim]{stats::optim()}}, depending on \code{method}.}
}
\value{
An "egf" object. A list containing copies of \code{init} elements
\code{data}, \code{window}, \code{first}, \code{last}, \code{curve}, \code{distr}, and
\code{include_baseline}; a copy of argument \code{method}; and these
additional elements:

\describe{
\item{\code{theta_fit}}{
A named numeric vector giving the optimizer's approximation
of the maximum likelihood parameter vector.
}
\item{\code{log_theta_fit}}{
Log-transformed \code{theta_fit}. Identical to \code{log(theta_fit)}
but with \code{"log_"} prepended to the names.
}
\item{\code{nll}}{
A numeric scalar giving the negative log likelihood of
\code{log_theta_fit}.
}
\item{\code{nll_func}}{
A closure with a numeric argument \code{log_theta} specifying a
log-transformed parameter vector (default is \code{log_theta_fit}).
Returns the negative log likelihood function evaluated at
\code{log_theta}.
}
\item{\code{nll_grad}}{
A closure with a numeric argument \code{log_theta} specifying a
log-transformed parameter vector (default is \code{log_theta_fit}).
Returns the gradient of the negative log likelihood with
respect to log-transformed parameters evaluated at \code{log_theta}.
}
\item{\code{eval_cum_inc}}{
A closure with numeric arguments \code{time} and \code{theta}
(default is \code{theta_fit}) evaluating expected cumulative
incidence at \code{time} days since \code{data$date[first]} conditional
on parameter vector \code{theta}. Elements of \code{theta} must be
named as in \code{theta_fit}. \code{predict(object, time)} should
be used instead of \code{object$eval_cum_inc(time)}.
}
\item{\code{madf_out}}{The list output of \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}}.}
\item{\code{optim_out}}{
The list output of \code{\link[stats:nlminb]{stats::nlminb()}}, \code{\link[stats:nlm]{stats::nlm()}},
or \code{\link[stats:optim]{stats::optim()}}, depending on \code{method}.
}
\item{\code{large_nbdisp_flag}}{
A logical scalar. If \code{TRUE}, then the fitted value of
the negative binomial dispersion parameter
(i.e., \code{theta_fit[["nbdisp"]]}) exceeds the threshold
defined by \code{nbdisp_tol}. Omitted if \code{distr != "nbinom"}.
}
\item{\code{call}}{
The call to \code{egf()}, allowing the output to be updated
using \code{\link[stats:update]{stats::update()}}.
}
}
}
\description{
Minimizes the negative log likelihood of an epidemic growth model
using \code{\link[stats:nlminb]{stats::nlminb()}}, \code{\link[stats:nlm]{stats::nlm()}}, or one of the routines
provided through \code{\link[stats:optim]{stats::optim()}}. The negative log likelihood as a
function of log-transformed parameters is written as a C++ template,
and its derivatives with respect to log-transformed parameters are
computed by automatic differentiation using package \pkg{TMB}.
}
\details{
The data used in likelihood calculation are specified by
\code{x = with(data, cases[(first+1):last])}.
If \code{x} has missing values and \code{na_action = "fail"},
then \code{egf()} will stop with an error.
If \code{x} has missing values and \code{na_action = "exclude"},
then the likelihood function will be defined as a product
over indices without missing values, unless \code{sum(!is.na(x))}
is less than the number of model parameters, in which case
\code{egf()} will stop with an error.

If \code{distr = "nbinom"} and \code{theta_fit[["nbdisp"]]}
exceeds \code{nbdisp_tol * max(diff(eval_cum_inc(time)))},
where \code{time = data$time[first:last]}, then \code{egf()}
will issue a warning suggesting to refit using a
Poisson model by running
\code{update(object, init = update(init, distr = "pois"))}.
This behaviour is discussed in the package vignette,
accessible with \code{vignette("epigrowthfit-vignette")}.
}
\examples{
data(canadacovid)
ontario <- subset(canadacovid, province == "ON")
x1 <- egf_init(new_confirmed ~ date,
  data = ontario,
  curve = "logistic",
  distr = "nbinom",
  first = 27,
  last = 77,
  peak = 77
)
x2 <- update(x1, first = 211, last = 236, peak = "2020-10-10")
y1 <- egf(x1)
y2 <- egf(x2)
print(y1)
coef(y1, log = FALSE)
coef(y1, log = TRUE)
confint(y1, level = 0.95, method = "linear", trace = FALSE)
predict(y1)
s <- simulate(y1, nsim = 6)
plot(s, inc = "interval")
plot(s, inc = "cumulative")
plot(y1, inc = "interval")
plot(y2, inc = "interval", add = TRUE)
plot(y1, inc = "cumulative")
plot(y2, inc = "cumulative", add = TRUE)

}
\references{
\insertRef{Ma+14}{epigrowthfit}

\insertRef{Earn+20}{epigrowthfit}
}
\seealso{
\code{\link[=egf_init]{egf_init()}}, \code{\link[=confint.egf]{confint.egf()}}, \code{\link[=plot.egf]{plot.egf()}}
}
