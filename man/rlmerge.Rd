% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{rlmerge}
\alias{rlmerge}
\title{Recursively merge lists}
\usage{
rlmerge(x, template)
}
\arguments{
\item{x}{A list.}

\item{template}{A list into which \code{x} is merged.}
}
\value{
A list.
}
\description{
Recursively merge elements of a partially specified list
into a completely specified list of defaults.
}
\details{
The recursion proceeds as follows:

If \code{x} is \code{NULL}, then \code{template} is replaced with \code{NULL}.

Otherwise, if \code{x} and \code{template} are both lists or are both
atomic vectors and \code{template} is unnamed, then \code{x} is recycled
to the length of \code{template}.

Otherwise, if \code{x} and \code{template} are both lists and \code{template}
is named, then elements of \code{x} are recursively merged into the
so-named elements of \code{template}.

Otherwise, if \code{x} and \code{template} are both atomic vectors and
\code{template} is named, then elements of \code{x} replace the so-named
elements of \code{template}.

Otherwise, \code{x} is discarded and \code{template} is preserved as is.
}
\examples{
x <- list(
  a = NULL,
  b = 1,
  c = list(
    c1 = list(
      c11 = 1,
      c12 = "a"
    ),
    c2 = c(Jan = 12L, Dec = 1L),
    c3 = FALSE
  )
)
template <- list(
  a = list(
    a1 = 0,
    a2 = "",
    a3 = FALSE
  ),
  b = seq_len(10L),
  c = list(
    c1 = list(
      c11 = 0,
      c12 = "",
      c13 = FALSE
    ),
    c2 = `names<-`(seq_len(12L), month.abb),
    c3 = list(TRUE)
  )
)

## Not run
\dontrun{
rlmerge(x, template)
}

}
\keyword{internal}
