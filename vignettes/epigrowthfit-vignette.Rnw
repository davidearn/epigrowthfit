\documentclass[dvipsnames,12pt]{article}
%\VignetteIndexEntry{epigrowthfit-vignette}
%\VignetteEngine{knitr::knitr}


% Page layout
\usepackage[top=1in,bottom=1.5in,left=1in,right=1in]{geometry}
\usepackage{lineno} % line numbering
\renewcommand{\linenumberfont}{\normalfont\tiny\sffamily\color[gray]{0.5}}
\hfuzz=1in % tolerate \hbox fullness
\vbadness=\maxdimen % tolerate \vbox badness

% Text layout
%\usepackage{setspace} % \onehalfspacing, \doublespacing
\raggedright
\usepackage[T1]{fontenc} % words with accented characters can be hyphenated

% Title page setup
\title{\Large The \pkg{epigrowthfit} package}
\author{Mikael Jagan, Benjamin M.\ Bolker, Junling Ma,\\ David J.\ D.\ Earn, Jonathan Dushoff}
\date{\today}

% Deferred execution
% front matter
\usepackage{etoolbox} % document hooks
\AfterEndPreamble{%
  \pagenumbering{roman}
  \maketitle
  \tableofcontents
  \thispagestyle{empty}
  \clearpage
  \pagenumbering{arabic}
  \linenumbers
}
% back matter
\AtEndDocument{%
  \bibliographystyle{vancouver}
  \bibliography{epigrowthfit-vignette}
}

% Math
\usepackage{amsmath,mathtools}
\usepackage{amssymb,bm,bbm}
\allowdisplaybreaks % page breaks in display style math mode

% Code
\usepackage[scaled=0.85]{DejaVuSansMono}
% Match inline code highlighting to custom knitr theme
% specified in `knit_theme.css`
\definecolor{background}{HTML}{f4f4f4} % background
\definecolor{num}{HTML}{aa4499} % numeric, logical, NA
\definecolor{str}{HTML}{999933} % character
\definecolor{com}{HTML}{999999} % comment
\definecolor{opt}{HTML}{555555} % !?
\definecolor{std}{HTML}{555555} % variable name, operator, delimiter
\definecolor{kwa}{HTML}{aa4499} % function, if, else, for, in, while, NULL
\definecolor{kwb}{HTML}{555555} % assignment operator
\definecolor{kwc}{HTML}{555555} % function argument
\definecolor{kwd}{HTML}{3a9183} % function name
\usepackage{listings} % \lstinline
\lstset{%
  basicstyle=\color{std}\ttfamily,%
  breaklines=true,%
  moredelim=[is][\color{num}]{`1}{`1},
  moredelim=[is][\color{str}]{`2}{`2},
  moredelim=[is][\color{com}\itshape]{`3}{`3},
  moredelim=[is][\color{opt}]{`4}{`4},
  moredelim=[is][\color{std}]{`5}{`5},
  moredelim=[is][\color{kwa}\bfseries]{`6}{`6},
  moredelim=[is][\color{kwb}]{`7}{`7},
  moredelim=[is][\color{kwc}]{`8}{`8},
  moredelim=[is][\color{kwd}]{`9}{`9}
}
\usepackage{realboxes} % \Colorbox

% Float captions
\usepackage{caption}
\captionsetup{%
  aboveskip=8pt,%
  labelfont=bf,%
  labelsep=period,%
  justification=raggedright,%
  singlelinecheck=false%
}
\renewcommand{\figurename}{Fig}

% Float placement
\usepackage{float} % \begin{figure}[H]
\usepackage[section]{placeins} % \FloatBarrier

% Lists
\usepackage{enumitem}
\setlist[enumerate]{label=(\roman*)}
\setlist[itemize]{label=\tiny$\blacksquare$}

% Tables
\usepackage{booktabs} % \toprule, \midrule, \bottomrule, \addlinespace
\usepackage{array}
% columns with variable width, top alignment
\newcolumntype{L}[1]{>{\raggedright\let\newline\\\arraybackslash\hspace{0pt}}p{#1}}
\newcolumntype{C}[1]{>{\centering\let\newline\\\arraybackslash\hspace{0pt}}p{#1}}
\newcolumntype{R}[1]{>{\raggedleft\let\newline\\\arraybackslash\hspace{0pt}}p{#1}}

% Citation
\usepackage{cite}
\makeatletter
\renewcommand{\@biblabel}[1]{\quad #1.} % \@biblabel format
\makeatother

% Ref hyperlinks
\usepackage[colorlinks=true,allcolors=magenta]{hyperref}
\usepackage[nameinlink,capitalize]{cleveref}
% equation
\crefformat{equation}{#2Eq~#1#3}
\crefmultiformat{equation}{#2Eqs~#1#3}{ and~#2#1#3}{, #2#1#3}{, and~#2#1#3}
\crefrangeformat{equation}{#3Eqs~#1#4--#5#2#6}
\crefformat{blankequation}{#2#1#3}
\crefmultiformat{blankequation}{#2#1#3}{ and~#2#1#3}{, #2#1#3}{, and~#2#1#3}
\crefrangeformat{blankequation}{#3#1#4--#5#2#6}
\crefalias{blankequation}{equation}
\crefformat{pluralequation}{#2Eqs~#1#3}
\crefalias{pluralequation}{equation}
% figure
\crefformat{figure}{#2Fig~#1#3}
\crefmultiformat{figure}{#2Figs~#1#3}{ and~#2#1#3}{, #2#1#3}{, and~#2#1#3}
\crefrangeformat{figure}{#3Figs~#1#4--#5#2#6}
% section
\crefformat{section}{#2\S#1#3}
\crefmultiformat{section}{#2\S\S#1#3}{ and~#2#1#3}{, #2#1#3}{, and~#2#1#3}
\crefrangeformat{section}{#3\S\S#1#4--#5#2#6}
% table
\crefformat{Table}{#2Table~#1#3}
\crefmultiformat{table}{#2Tables~#1#3}{ and~#2#1#3}{, #2#1#3}{, and~#2#1#3}
\crefrangeformat{table}{#3Tables~#1#4--#5#2#6}

% More macros
% laziness
\let\tops\texorpdfstring
% fonts
\renewcommand{\vec}[1]{\bm{\mathrm{#1}}}
% diacritics
\let\wh\widehat
\let\wt\widetilde
% delimiters
\DeclarePairedDelimiter{\abs}{\lvert}{\rvert}
\DeclarePairedDelimiter{\floor}{\lfloor}{\rfloor}
\DeclarePairedDelimiter{\ceil}{\lceil}{\rceil}
% operators
\DeclareMathOperator*{\argmin}{arg\,min}
% symbols
\newcommand{\thalf}{t_\text{\normalfont half}}
\newcommand{\R}{\mathcal{R}}
% abbreviations
\newcommand{\cf}{\textit{cf}.~}
\newcommand{\eg}{\textit{e}.\textit{g}.,~}
\newcommand{\ie}{\textit{i}.\textit{e}.,~}
\newcommand{\etc}{\textit{etc}.}
\newcommand{\etal}{\textit{et al}.}
% code
%\newcommand{\code}[1]{\Colorbox{background}{\lstinline|#1|}}
\newcommand{\code}[1]{\lstinline|#1|}
\newcommand{\fun}[1]{\code{`9#1`9()}}
\let\pkg\textbf




%%%%%%%%%%%%%%%%
%% START HERE %%
%%%%%%%%%%%%%%%%

\begin{document}
\setlength{\parskip}{0.5mm}
\setlength{\parindent}{7mm}

<<set-chunk-defaults, echo=FALSE>>=
library(knitr)
## Make some substitutions in the .tex output in order to:
## * Prevent lineno from messing up breaking of chunks over pages.
## * Prevent automatic indentation after chunks.
## * Dispense with compile errors due to knitr-xcolor interaction.
##   See https://tex.stackexchange.com/questions/148188/.
knit_hooks$set(document = function(x) {
  x <- sub("\\begin{knitrout}", "\\nolinenumbers\\begin{knitrout}", x, fixed = TRUE)
  x <- sub("\\end{knitrout}", "\\end{knitrout}\\linenumbers\\noindent", x, fixed = TRUE)
  sub("\\usepackage[]{color}", "\\usepackage{xcolor}", x, fixed = TRUE)
})
## Set number of digits printed in chunk output with chunk option "digits"
knit_hooks$set(digits = function(before, options, envir) {
  if (before) {
    options(digits = options$digits)
  }
})
## Set character width of chunk with chunk option "width"
## (can be used to prevent intrusions into right margin)
knit_hooks$set(char.width = function(before, options, envir) {
  if (before) {
    options(width = options$char.width)
  }
})
## Use custom palette for code highlighting
knit_theme$set(knit_theme$get("knit_theme.css"))
## Set chunk defaults
opts_chunk$set(
  cache = TRUE, # if `FALSE`, chunk is evaluated from scratch with compile
  echo = TRUE, # if `FALSE`, chunk is not displayed
  eval = TRUE, # if `FALSE`, chunk is not evaluated
  include = TRUE, # if `FALSE`, chunk output is not displayed and `error = FALSE`
  error = TRUE, # if `FALSE`, evaluation stops on errors
  warning = TRUE, # if `FALSE`, warnings printed in console, not document
  message = FALSE, # if `FALSE`, messages printed in console, not document
  digits = 7, # number of digits printed in chunk output
  char.width = 74, # character width of chunks
  fig.pos = "H", # figure position in document
  dev = "pdf", # plotting device
  dev.args = list(pointsize = 10), # base point size in plots
  strip.white = TRUE # reduce white space around chunks (?)
)
@

\section{Introduction}
\label{sec:intro}

R package \pkg{epigrowthfit} implements methods for estimating parameters
associated with initial epidemic growth. \pkg{epigrowthfit} was initially
developed to support the analysis of Ma \etal~\cite{Ma+14} and later Earn
\etal~\cite{Earn+20}, but now extends their methods and provides additional
useful machinery.

This document was built using \Sexpr{R.Version()$version.string}
and these R package versions:

<<package-versions, echo=FALSE>>=
package_list <- c(
  "epigrowthfit",
  "TMB",     # automatic differentiation of objective functions
  "emdbook", # tools for ecological modeling
  "knitr"    # integration of R code and LaTeX
)
for (package_name in package_list[-4]) {
  library(package_name, character.only = TRUE)
}
print(installed.packages()[package_list, "Version"], quote = FALSE)
@

\subsection{Installation}

\pkg{epigrowthfit} can be installed from a
\href{https://github.com/davidearn/epigrowthfit/}{GitHub repository}
using function \fun{install_github} from the \pkg{remotes} package.

<<installation, eval=FALSE>>=
if (!require(remotes)) {
  install.packages("remotes")
}
remotes::install_github("davidearn/epigrowthfit", build_vignettes = TRUE)
library(epigrowthfit)
@
%
A list of data sets and functions exported by \pkg{epigrowthfit}
can be retrieved with \fun{data} and \fun{ls}.

<<namespace>>=
# Data sets
(dnames <- data(package = "epigrowthfit")$results[, "Item"])

# Functions
(fnames <- setdiff(ls("package:epigrowthfit"), dnames))
@
%
Functions \fun{egf_init} and \fun{egf} do all of the work in
estimating epidemic growth parameters. They return lists of
class \code{egf_init} and \code{egf}. \pkg{epigrowthfit}
implements a number of useful (S3) methods for each class:

<<s3methods>>=
(s3names <- setdiff(ls(getNamespace("epigrowthfit")), c(dnames, fnames)))
@

These methods should not be called directly, as they are found
automatically by R when the corresponding generic functions
(the names before the dot) are called. For example, if
\code{`9plot`9(x)} is run and \code{x} is an \code{egf} object,
then R evaluates \code{`9plot.egf`9(x)}. These methods are all
demonstrated in \cref{sec:example1}.

The remaining exported functions serve primarily to enable
estimation of the basic reproduction number $\R_0$ from epidemic
growth rates $r$ obtained by \fun{egf}. These functions will be
examined in \cref{sec:example2}.


\subsection{Documentation}

Package documentation can be accessed as follows:

<<documentation, eval=FALSE>>=
## This vignette
vignette("epigrowthfit-vignette")

## Help pages
?"epigrowthfit-package" # package
?function_name          # function "function_name"
?"class_name-methods"   # S3 methods for class "class_name"
@


\section{Data requirements}

All that is required to use \pkg{epigrowthfit} is an interval incidence
time series. That is, one must have times $t_0 < t_1 < \cdots < t_n$
and know the number $c_i$ of cases observed between times $t_{i-1}$ and
$t_i$, for $i = 1,\ldots,n$. Here, ``cases'' is used loosely to mean one
of three things: (i) infections, (ii) reported infections, or (iii)
reported deaths from disease.

If, at the start of an epidemic, incidence $x(t)$ can be modeled as an
exponential function, so that $x(t) \simeq x_0 e^{rt}$, and if reported
incidence (or reported disease mortality) $y(t)$ is proportional to
incidence at an earlier time, so that $y(t) \propto x(t-t_\text{delay})$,
then both $x(t)$ and $y(t)$ grow exponentially with rate $r$. Hence,
for the purpose of estimating $r$ for a given epidemic, it is sufficient
to study reported incidence and mortality.

During many historical epidemics, one only observes deaths due to all causes.
\pkg{epigrowthfit} handles this additional use case by assuming a model for
how all causes mortality is decomposed into disease mortality and mortality
due to other causes (see \cref{sec:baseline}).

Note that interval incidence can be derived from \emph{cumulative} incidence
by differencing. That is, if one knows the number $x_i$ cases observed up to
time $t_i$ for $i = 0,\ldots,n$, then one derives interval incidence as
$c_i = x_i - x_{i-1}$.


\section{Models of epidemic growth}

The models fit by \pkg{epigrowthfit} consist of a phenomenological
model and an observation model. The phenomenological model says what
an incidence curve is expected to look like, while the observation
model says how what we observe varies randomly from this expectation.
Below is a brief outline of the phenomenological and observation
models implemented in \pkg{epigrowthfit}.

\subsection{Models of expected cumulative incidence}

Let $x(t)$ be the expected number of cases observed up to
$t$ days since a reference date, and let $x(0) = x_0 > 0$.

\paragraph{Exponential model.} If $x(t)$ follows
%
\begin{linenomath}
\begin{equation}
x'(t) = r x(t)\,,\qquad r > 0\,,
\end{equation}
\end{linenomath}
%
then $x(t)$ grows exponentially as
%
\begin{linenomath}
\begin{equation}
\label{eq:exponential}
x(t) = x_0 e^{r t}\,.
\end{equation}
\end{linenomath}
%
Two parameters must be fit to observed data: the exponential
growth rate $r$ and initial value $x_0$.

The exponential model ignores depletion of susceptible individuals
and implies continuous exponential growth of $x(t)$. Hence it will
only agree with epidemic data during the (typically short) initial
exponential growth phase. Ma \etal~\cite{Ma+14} show that estimates
of $r$ are sensitive to the choice of fitting window, and that more
robust fits to the data are likely to obtained with the logistic
and Richards models (see below), at negligible cost.

\paragraph{Logistic model.} If $x(t)$ follows
%
\begin{linenomath}
\begin{equation}
x'(t) = r x(t)\bigg(1 - \frac{x(t)}{K}\bigg)\,,\qquad r, K > 0\,,
\end{equation}
\end{linenomath}
%
and if $x_0 \in (0,K)$, then $x(t)$ grows logistically
%
\begin{linenomath}
\begin{equation}
x(t) = \frac{K}{1 + \big(\frac{K}{x_0} - 1\big) e^{-r t}}
\end{equation}
\end{linenomath}
%
and increases to $K$ as $t \to \infty$. The logistic model can
be reparametrized as
%
\begin{linenomath}
\begin{equation}
\label{eq:logistic}
x(t) = \frac{K}{1 + e^{-r (t - \thalf)}}\,,
\end{equation}
\end{linenomath}
%
where $\thalf$ is the time at which cumulative incidence attains
half its final size, satisfying $x(\thalf) = \frac{K}{2}$. The
reparametrized logistic model requires fitting $r$, $K$, and $\thalf$
to observed data.

\paragraph{Richards model.} If $x(t)$ follows
%
\begin{linenomath}
\begin{equation}
x'(t) = r x(t)\bigg(1 - \bigg(\frac{x(t)}{K}\bigg)^p\bigg)\,,\qquad r, K, p > 0\,,
\end{equation}
\end{linenomath}
%
and if $x_0 \in (0,K)$, then $x(t)$ grows as
%
\begin{linenomath}
\begin{equation}
x(t) = \frac{K}{\big[1 + \big(\big(\frac{K}{x_0}\big)^p - 1\big) e^{-r p t}\big]^{1/p}}
\end{equation}
\end{linenomath}
%
and increases to $K$ as $t \to \infty$. (The logistic model
is recovered in the special case $p = 1$.) The Richards model
can be reparametrized as
%
\begin{linenomath}
\begin{equation}
\label{eq:richards}
x(t) = \frac{K}{\big[1 + (2^p - 1) e^{-r p (t - \thalf)}\big]^{1/p}}
\end{equation}
\end{linenomath}
%
where, as with the logistic model, $\thalf$ satisfies
$x(\thalf) = \frac{K}{2}$. The reparametrized Richards model
requires fitting $r$, $K$, $\thalf$, and $p$ to observed data.

\subsection{Models of observed interval incidence}

Let $c(t_1,t_2) = x(t_2) - x(t_1)$ be the expected number of
cases observed between times $t_1$ and $t_2 \geq t_1$, \ie
expected interval incidence. Let $C(t_1,t_2)$ be the number
that is actually observed.

\paragraph{Poisson model.} $C(t_1,t_2)$ is modeled as
a Poisson-distributed random variable with mean $c(t_1,t_2)$:
%
\begin{linenomath}
\begin{equation}
C(t_1,t_2) \sim \mathrm{Poisson}\big(c(t_1,t_2)\big)\,.
\end{equation}
\end{linenomath}

\paragraph{Negative binomial model.} $C(t_1,t_2)$ is modeled as
a negative binomial-distributed random variable with mean $c(t_1,t_2)$
and dispersion $k > 0$:
%
\begin{linenomath}
\begin{equation}
C(t_1,t_2) \sim \mathrm{NegativeBinomial}\big(c(t_1,t_2),k\big)\,.
\end{equation}
\end{linenomath}
%
This observation model requires that $k$ is fit in addition to
other model parameters.

\subsection{Baseline growth}
\label{sec:baseline}

For many historical epidemics, the observed data count deaths
due to all causes, not only the disease of interest. Growth in
disease mortality over time can still be understood
phenomenologically provided that it is modeled separately from
baseline mortality (deaths to causes other than the disease).
To account for baseline mortality, it is assumed that deaths
in the absence of disease occur at a constant rate $b > 0$.
Then, for example, the logistic model given by \cref{eq:logistic}
becomes
%
\begin{linenomath}
\begin{equation}
x(t) = b t + \frac{K}{1 + e^{-r (t - \thalf)}}\,,
\end{equation}
\end{linenomath}
%
where $x(t)$ is to be interpreted as expected cumulative mortality
instead of expected cumulative disease mortality. Accounting for
baseline mortality requires that $b$ is fit in addition to the other
model parameters.

\section{Example 1: Fitting epidemic growth models}
\label{sec:example1}

\pkg{epigrowthfit} comes with a number of infectious disease
data sets. One of these is \code{canadacovid}, which lists
daily confirmations of COVID-19 in Canadian provinces and
territories from February 14, 2020 to June 21, 2020. You
can load this data set into your working environment with
\fun{data}.

<<example1-1>>=
data(canadacovid)
head(canadacovid, 10) # print the first 6 rows
levels(canadacovid$province)
@

Let's consider just the data from Ontario.

<<example1-2>>=
ontario <- subset(canadacovid, province == "ON")
sum(is.na(ontario$new_confirmations))
@

\pkg{epigrowthfit} does not tolerate missing values
in the incidence. We can remove rows with \code{`1NA`1}
using \fun{na.omit}.

<<example1-3>>=
ontario <- na.omit(ontario)
sum(is.na(ontario$new_confirmations))
@

<<example1-4, fig.height=5>>=
init <- egf_init(
  date = ontario$date,
  cases = ontario$new_confirmations[-1],
  curve = "richards",
  distr = "nbinom"
)
x <- egf(init)
print(x)
coef(x, log = FALSE)
coef(x, log = TRUE)
#time_obs <- as.numeric(ontario$date - ontario$date[1])
#time_pred <- seq(min(time_obs), max(time_obs), by = median(diff(time_obs)))
#predict(x, time = time_pred)
#simulate(x, nsim = 4, time = time_obs)
plot(x, inc = "interval")
plot(x, inc = "cumulative")
@


\section{Example 2: Estimating the basic reproduction number \tops{$\R_0$}{R0}}
\label{sec:example2}

Under construction!

\end{document}

